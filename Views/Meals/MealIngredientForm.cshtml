@model CheckTheFridge.Models.MealIngredientViewModel

@{
    ViewBag.Title = "MealIngredientForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit Meal Ingredient</h2>


@using (Html.BeginForm("ProcessMealIngredientToEdit", "Meals"))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <p>Edit an ingredient in your meal</p>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.MealIngredientId)
    @Html.HiddenFor(model => model.MealId)

    <div class="form-group">
        @Html.LabelFor(model => model.Label, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Label, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.Label, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UnitId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.SelectedUnitId, new SelectList(Model.AvailableUnitLabels, "unit_id", "label"))
            @Html.ValidationMessageFor(model => model.SelectedUnitId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Update" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
