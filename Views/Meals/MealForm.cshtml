@model CheckTheFridge.Models.MealViewModel

@{
    ViewBag.Title = "MealForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit Meal</h2>


@using (Html.BeginForm("AddMealIngredientToMeal", "Meals"))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <p>Edit your meal and ingredients here</p>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Instructions, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Instructions, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Instructions, "", new { @class = "text-danger" })
        </div>
    </div>

    


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Update" class="btn btn-default" />
        </div>
    </div>
</div>
}
<div class="container">
    <dl class="dl-horizontal">
        <dd>
            <table class="table table-hover">
                <tr>
                    <th>Ingredient</th>
                    <th>Quantity</th>
                    <th>Unit</th>
                    <th>Action</th>
                </tr>
                @foreach (var ingredient in Model.Ingredients)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => ingredient.Label)</td>
                        <td>@Html.DisplayFor(modelItem => ingredient.Quantity)</td>
                        <td>@Html.DisplayFor(modelItem => ingredient.UnitLabel)</td>
                        <td>
                            @Html.ActionLink("Edit", "ProcessIngredientToEdit", new { id = ingredient.MealIngredientId }) |
                            @Html.ActionLink("Remove", "RemoveMealIngredient", new { id = ingredient.MealIngredientId })
                        </td>
                    </tr>
                }
            </table>
            <div>
                @Html.ActionLink("Add Ingredient", "ProcessMealIngredientToAdd", new { id = Model.Id })
            </div>
        </dd>
    </dl>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
